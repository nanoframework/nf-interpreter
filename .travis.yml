
###

language: c #NOTE: this will set CC=gcc which might cause trouble

sudo: required

# Do not build branches of the form "pr/*". By prefixing pull requests coming
# from branches inside the repository with pr/, this avoids building both the
# branch push _and_ the pull request.
branches:
  except: /pr\/.*/

# Workaround for https://github.com/travis-ci/travis-ci/issues/4681
matrix:
   exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true

   include:
    - env: CMAKE_OPTIONS="-DTOOLCHAIN_PREFIX=/home/travis/gcc-arm-none-eabi-5_2-2015q4 -DCHIBIOS_BOARD=ST_STM32F4_DISCOVERY -DTARGET_SERIES=STM32F4xx -DUSE_FPU=TRUE -DCHIBIOS_VERSION=16.1.7 -DCMAKE_BUILD_TYPE=Debug -DNF_FEATURE_DEBUGGER=TRUE "
    - env: CMAKE_OPTIONS="-DTOOLCHAIN_PREFIX=/home/travis/gcc-arm-none-eabi-5_2-2015q4 -DCHIBIOS_BOARD=ST_STM32F429I_DISCOVERY -DTARGET_SERIES=STM32F4xx -DUSE_FPU=TRUE -DCHIBIOS_VERSION=16.1.7 -DCMAKE_BUILD_TYPE=Debug -DNF_FEATURE_DEBUGGER=TRUE "
    - env: CMAKE_OPTIONS="-DTOOLCHAIN_PREFIX=/home/travis/gcc-arm-none-eabi-5_2-2015q4 -DCHIBIOS_BOARD=ST_NUCLEO_F091RC -DTARGET_SERIES=STM32F0xx -DCHIBIOS_VERSION=16.1.7 -DCMAKE_BUILD_TYPE=Debug -DNF_FEATURE_DEBUGGER=TRUE "
    - env: CMAKE_OPTIONS="-DTOOLCHAIN_PREFIX=/home/travis/gcc-arm-none-eabi-5_2-2015q4 -DCHIBIOS_BOARD=ST_NUCLEO144_F746ZG -DTARGET_SERIES=STM32F7xx -DUSE_FPU=TRUE -DCHIBIOS_VERSION=16.1.7 -DCMAKE_BUILD_TYPE=Debug -DNF_FEATURE_DEBUGGER=TRUE "
    - env: CMAKE_OPTIONS="-DTOOLCHAIN_PREFIX=/home/travis/gcc-arm-none-eabi-5_2-2015q4 -DCHIBIOS_BOARD=MBN_QUAIL -DTARGET_SERIES=STM32F4xx -DUSE_FPU=TRUE -DCHIBIOS_VERSION=16.1.7 -DCMAKE_BUILD_TYPE=Debug -DNF_FEATURE_DEBUGGER=TRUE "

## cache GCC toolchain to speedup next builds
cache:
  directories:
    - $HOME/gcc-arm-none-eabi-5_2-2015q4

install:

  - mkdir $HOME/usr
  - export PATH="$HOME/usr/bin:$PATH"
  - wget --no-check-certificate http://www.cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.sh
  - chmod +x cmake-3.7.2-Linux-x86_64.sh
  - ./cmake-3.7.2-Linux-x86_64.sh --prefix=$HOME/usr --exclude-subdir --skip-license


# install:

  ## Install mainline ARM toolchain 
  - export GCC_DIR=$HOME/gcc-arm-none-eabi-5_2-2015q4
  - export GCC_ARCHIVE=$HOME/gcc-arm-none-eabi-5_2-2015q4-20151219-linux.tar.bz2
  - export GCC_URL=https://launchpad.net/gcc-arm-embedded/5.0/5-2015-q4-major/+download/gcc-arm-none-eabi-5_2-2015q4-20151219-linux.tar.bz2
  - if [ ! -e $GCC_DIR/bin/arm-none-eabi-g++ ]; then wget $GCC_URL -O $GCC_ARCHIVE; tar xfj $GCC_ARCHIVE -C $HOME; fi
  - export PATH=$PATH:$GCC_DIR/bin

before_script:
  ###################################################################
  # need to install the 32 bit libraries for ARM GCC to run properly 
  - sudo apt-get update
  - sudo apt-get install libc6:i386 libstdc++6:i386
  ###################################################################

  ############################################################################
  # Go back to the root of the project and setup the build directory
  ############################################################################
  - cd ${TRAVIS_BUILD_DIR}

script:
  - mkdir build && cd build && cmake ${CMAKE_OPTIONS} .. && cmake --build .

notifications:
  email: false
