###

language: c #NOTE: this will set CC=gcc which might cause trouble

# Do not build branches of the form "pr/*". By prefixing pull requests coming
# from branches inside the repository with pr/, this avoids building both the
# branch push _and_ the pull request.
branches:
  except: /pr\/.*/

# Workaround for https://github.com/travis-ci/travis-ci/issues/4681
matrix:
   exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true

   include:
    - os: linux
      env: CMAKE_OPTIONS="-DTOOLCHAIN_PREFIX=/tmp/gcc-arm-none-eabi-5_4-2016q3-20160926/ -DUSE_FPU=TRUE -DCHIBIOS_VERSION=16.1.7 -DCHIBIOS_BOARD=ST_STM32F4_DISCOVERY -DNF_FEATURE_DEBUGGER=TRUE "
      compiler: gcc


install:
############################################################################
  # Install a recent CMake
  ############################################################################
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake
      brew upgrade cmake
    fi
  - cmake --version

  ## Install mainline ARM toolchain and srecord.
  -  sudo apt-get -qq install srecord &&
      $WGET https://developer.arm.com/-/media/Files/downloads/gnu-rm/5_4-2016q3/gcc-arm-none-eabi-5_4-2016q3-20160926-linux.tar.bz2 &&
      tar xjf gcc-arm-none-eabi-5_4-2016q3-20160926-linux.tar.bz2 -C /tmp/ &&
      sudo cp -f -r /tmp/gcc-arm-none-eabi-5_4-2016q3-20160926/* /usr/local/ &&
      rm -rf /tmp/gcc-arm-none-eabi-* gcc-arm-none-eabi-*-linux.tar.bz2 &&
      arm-none-eabi-gcc --version ;


before_script:

  ############################################################################
  # Go back to the root of the project and setup the build directory
  ############################################################################
  - cd ${TRAVIS_BUILD_DIR}
  - (mkdir build && cd build && cmake .. ${CMAKE_OPTIONS})

notifications:
  email: false
