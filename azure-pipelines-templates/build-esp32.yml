# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

parameters:
  buildDirectory: '$(Build.SourcesDirectory)\build'
  partitionsDirectory: '$(Build.SourcesDirectory)\targets\FreeRTOS_ESP32\$(TargetBoard)'

steps:
  - task: CMake@1
    inputs:
      cmakeArgs: '-G Ninja -DCMAKE_TOOLCHAIN_FILE=CMake/toolchain.xtensa-esp32-elf.cmake -DTOOLCHAIN_PREFIX=$(ESP32_TOOLCHAIN_PATH) -DESP32_IDF_PATH=$(ESP32_IDF_PATH) -DESP32_LIBS_PATH=$(ESP32_LIBS_PATH) -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_VERSION=$(NBGV_VersionMajor).$(NBGV_VersionMinor).$(NBGV_BuildNumber).$(TARGET_BUILD_COUNTER) -DTARGET_BOARD=$(TargetBoard) -DTARGET_NAME=$(TargetPublishName) $(BuildOptions) ..'
      workingDirectory:  ${{ parameters.buildDirectory }}
    displayName: Setup build with CMake

  - task: CMake@1
    inputs:
      cmakeArgs: '--build ${{ parameters.buildDirectory }} --target all --config MinSizeRel'
      workingDirectory:  ${{ parameters.buildDirectory }}
    displayName: Build with CMake

  # because of permission issues (the python script isn't allowed to write on the output folder)
  # we need to perform these steps by calling directly the python scripts
  - task: PythonScript@0
    condition: succeeded()
    displayName: Generate nanoCLR bin file for deployment
    inputs:
      scriptSource: 'filePath'
      scriptPath: '$(Agent.TempDirectory)\ESP32_Tools\esp-idf-v3.3.1\components\esptool_py\esptool\esptool.py'
      arguments: '--chip esp32 elf2image --flash_mode dio --flash_freq 40m --flash_size 4MB -o ${{ parameters.buildDirectory }}\nanoCLR.bin ${{ parameters.buildDirectory }}\nanoCLR.elf'

  - task: PythonScript@0
    condition: succeeded()
    displayName: Generate Esp32 Partition tables for 16MB flash
    inputs:
      scriptSource: 'filePath'
      scriptPath: '$(Agent.TempDirectory)\ESP32_Tools\esp-idf-v3.3.1\components\partition_table\gen_esp32part.py'
      arguments: '--verify ${{ parameters.partitionsDirectory }}\IDF\partitions_nanoclr_16mb.csv ${{ parameters.buildDirectory }}\partitions_16mb.bin'
  - task: PythonScript@0
    condition: succeeded()
    displayName: Generate Esp32 Partition tables for 8MB flash
    inputs:
      scriptSource: 'filePath'
      scriptPath: '$(Agent.TempDirectory)\ESP32_Tools\esp-idf-v3.3.1\components\partition_table\gen_esp32part.py'
      arguments: '--verify ${{ parameters.partitionsDirectory }}\IDF\partitions_nanoclr_8mb.csv ${{ parameters.buildDirectory }}\partitions_8mb.bin'

  - task: PythonScript@0
    condition: succeeded()
    displayName: Generate Esp32 Partition tables for 4MB flash
    inputs:
      scriptSource: 'filePath'
      scriptPath: '$(Agent.TempDirectory)\ESP32_Tools\esp-idf-v3.3.1\components\partition_table\gen_esp32part.py'
      arguments: '--verify ${{ parameters.partitionsDirectory }}\IDF\partitions_nanoclr_4mb.csv ${{ parameters.buildDirectory }}\partitions_4mb.bin'

  - task: PythonScript@0
    condition: succeeded()
    displayName: Generate Esp32 Partition tables for 2MB flash
    inputs:
      scriptSource: 'filePath'
      scriptPath: '$(Agent.TempDirectory)\ESP32_Tools\esp-idf-v3.3.1\components\partition_table\gen_esp32part.py'
      arguments: '--verify ${{ parameters.partitionsDirectory }}\IDF\partitions_nanoclr_2mb.csv ${{ parameters.buildDirectory }}\partitions_2mb.bin'

  - task: PythonScript@0
    condition: succeeded()
    displayName: List flash 4Mb Esp32 Partition tables
    inputs:
      scriptSource: 'filePath'
      scriptPath: '$(Agent.TempDirectory)\ESP32_Tools\esp-idf-v3.3.1\components\partition_table\gen_esp32part.py'
      arguments: '${{ parameters.buildDirectory }}\partitions_4mb.bin'
