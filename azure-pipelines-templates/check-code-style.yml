# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

steps:

  - task: PowerShell@2
    name: Check_Code_Style
    displayName: Check code style
    condition: eq(variables['Build.Reason'], 'PullRequest')
    inputs:
      failOnStderr: false
      targetType: 'inline'
      script: |
        # need this to remove definition of redirect stdErr (only on Azure Pipelines image fo VS2019)
        $env:GIT_REDIRECT_STDERR = '2>&1'

        # compute authorization header in format "AUTHORIZATION: basic 'encoded token'"
        # 'encoded token' is the Base64 of the string "nfbot:personal-token"
        $auth = "basic $([System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("nfbot:$(GitHubToken)"))))"

        git config --global gc.auto 0
        git config --global user.name nfbot
        git config --global user.email nanoframework@outlook.com
        git config --global core.autocrlf true

        # find PR
        "Getting PR#$env:System_PullRequest_PullRequestNumber details..." | Write-Host -ForegroundColor White -NoNewline
        $pr = Invoke-WebRequest "https://api.github.com/repos/nanoFramework/nf-interpreter/pulls/$env:System_PullRequest_PullRequestNumber" | ConvertFrom-Json

        if($($pr.number) -eq "$env:System_PullRequest_PullRequestNumber")
        {
          'OK' | Write-Host -ForegroundColor Green
        }

        # fetch GitHub repo & branches
        Write-Debug "Fetch GitHub repo & branches"
        
        # add remote for PR head
        "Adding remote: $($pr.head.repo.html_url)..." | Write-Host -ForegroundColor White

        git remote add pr-branch "$($pr.head.repo.html_url)" > $null
        git fetch --quiet --all > $null

        # checkout from PR repo/branch
        "Checkout remote branch: $($pr.head.ref)..." | Write-Host -ForegroundColor White

        git checkout --quiet --no-progress "refs/remotes/pr-branch/$($pr.head.ref)" > $null

        # switch to working branch
        $branchName = "nfbot/clang-format-fix/$([guid]::NewGuid().ToString())"
        git switch --quiet --no-progress -c $branchName > $null

        "Working branch is $branchName" | Write-Host -ForegroundColor White

        # list PR files
        $prFiles = Invoke-WebRequest "https://api.github.com/repos/nanoFramework/nf-interpreter/pulls/$env:System_PullRequest_PullRequestNumber/files" | ConvertFrom-Json

        "Starting file check..." | Write-Host -ForegroundColor White
        
        # find clang-format
        $clangFormat = "clang-format.exe"
        if(!(Get-Command $clangFormat -ErrorAction SilentlyContinue))
        {
            Write-Information "Can't find clang-format.exe in %PATH%, trying to use %VCINSTALLDIR%..."
            
            $clangFormat="$(Agent.TempDirectory)\llvm\bin\clang-format.exe"
            
            if(!(Test-Path -Path $clangFormat -PathType leaf))
            {
              "Can't find clang-format.exe executable!" | Write-Host -ForegroundColor Red
            }
        }

        # have clang-format parse each file source file
        foreach($file in $prFiles)
        {
          Write-Debug "checking: $($file.filename)"
          
          # don't process deleted files
          if( $($file.status) -eq "modified" -or
              $($file.status) -eq "added" -or
              $($file.status) -eq "renamed")
          {
            # we only care about C/C++ source files and headers
            if( $($file.filename).endswith(".c") -or
                $($file.filename).endswith(".cpp") -or
                $($file.filename).endswith(".h"))
            {
              "Parsing '$($file.filename)'..." | Write-Host -ForegroundColor White -NoNewline
              
              # parse file
              & $clangFormat -style=file -i "$($file.filename)"

              "OK" | Write-Host -ForegroundColor Green
            } 
          }
        }

        # check if anything was changed
        $repoStatus = "$(git status --short --porcelain)"

        if ($repoStatus -ne "")
        {
          "Commit changes..." | Write-Host -ForegroundColor White

          # commit changed files
          git add -A 2>&1
          git commit -m "Code style fixes" -m "Automated fixes for code style." > $null
      
          "Pushing changes..." | Write-Host -ForegroundColor White

          # push to nf-interpreter repo
          git -c http.extraheader="AUTHORIZATION: $auth" push --porcelain --set-upstream origin "$branchName"

          # submit PR with code style fixes
          $prRequestBody = @{title="Code style fixes for $env:Build_Repository_Name PR#$env:System_PullRequest_PullRequestNumber";body="Automated fix of code style using project clang-format rules.`nYou can review and make changes or simply merge this PR to apply the fixes.";head="nanoFramework:$branchName";base="$($pr.head.ref)"} | ConvertTo-Json

          # start PR
          Write-Debug "Starting PR with fixes."
          "Creating PR..." | Write-Host -ForegroundColor White

          $githubApiEndpoint = "https://api.github.com/repos/$($pr.head.repo.full_name)/pulls"
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

          try 
          {
              $result = Invoke-RestMethod -Method Post -UserAgent [Microsoft.PowerShell.Commands.PSUserAgent]::InternetExplorer -Uri  $githubApiEndpoint -Header @{"Authorization"="$auth"} -ContentType "application/json" -Body $prRequestBody
              'Submitting PR with code style fixes...' | Write-Host -ForegroundColor White -NoNewline

              'OK' | Write-Host -ForegroundColor Green

              # PR submitted, add a comment
              $codeStyleFixesComment = @{body="@$($pr.user.login) there are issues with the code style on the source files.`nA PR was submitted with the code style fixes. Please review and merge the changes. See $($result.html_url).`n`nMake sure you are using the project code style. Check the details [here](https://docs.nanoframework.net/content/contributing/cxx-coding-style.html)."} | ConvertTo-Json
              Invoke-RestMethod -Method Post -UserAgent [Microsoft.PowerShell.Commands.PSUserAgent]::InternetExplorer -Uri $($pr.comments_url) -Header @{"Authorization"="$auth"} -ContentType "application/json" -Body $codeStyleFixesComment
          }
          catch 
          {
              "Failed" | Write-Host -ForegroundColor Red

              $result = $_.Exception.Response.GetResponseStream()
              $reader = New-Object System.IO.StreamReader($result)
              $reader.BaseStream.Position = 0
              $reader.DiscardBufferedData()
              $responseBody = $reader.ReadToEnd()

              "Error submitting PR: $responseBody" | Write-Host -ForegroundColor Red

              # most likely this is a permissions issue because the base repo is read only or protected
              # report to user
              $codeStyleFixesComment = @{body="@$($pr.user.login) there are issues with the code style on the source files.`n`n:warning:Couldn't submit a PR with the fixes against your repo.:warning:`n`nPlease merge the changes from https://github.com/nanoframework/nf-interpreter/tree/$branchName."} | ConvertTo-Json
              $result = Invoke-RestMethod -Method Post -UserAgent [Microsoft.PowerShell.Commands.PSUserAgent]::InternetExplorer -Uri $($pr.comments_url) -Header @{"Authorization"="$auth"} -ContentType "application/json" -Body $codeStyleFixesComment

              throw "Error starting PR: $responseBody"
          }

          # set variable to skip build failure report on Discord
          echo "##vso[task.setvariable variable=CODE_STYLE_CHECK_FAILED;isOutput=true]true"

          # force the check to fail
          throw "Code style check failed"
        }

  - task: PowerShell@2
    name: Check_Code_Style_SKIP
    displayName: Check code style (SKIP)
    condition: ne(variables['Build.Reason'], 'PullRequest')
    inputs:
      targetType: 'inline'
      script: exit 0
