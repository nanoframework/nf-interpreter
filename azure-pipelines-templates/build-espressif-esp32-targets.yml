# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

parameters:
  - name: repoDirectory
    type: string
    default: $(Build.SourcesDirectory)\nf-interpreter
  - name: partitionsDirectory
    type: string
    default: $(Build.SourcesDirectory)\nf-interpreter\targets\ESP32\_IDF\$(IDF_Target)

steps:

  - template: setup-cmake-user-presets.yml
    parameters:
      repoDirectory: ${{ parameters.repoDirectory }}

  - task: CMake@1
    condition: succeeded()
    displayName: Setup build with CMake
    inputs:
      cmakeArgs: ' --preset $(PackageName) -DESP32_IDF_PATH=$(IDF_PATH) -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_VERSION=$(NBGV_VersionMajor).$(NBGV_VersionMinor).$(NBGV_BuildNumber).$(TARGET_BUILD_COUNTER) -DTARGET_BOARD=$(TargetBoard) -DTARGET_NAME=$(TargetName) $(BuildOptions)'
      workingDirectory: ${{ parameters.repoDirectory }}

  - task: CMake@1
    displayName: Build with CMake
    condition: succeeded()
    inputs:
      cmakeArgs: '--build  --preset $(PackageName) --target all --config MinSizeRel '
      workingDirectory:  ${{ parameters.repoDirectory }}

  # because of permission issues (the python script isn't allowed to write on the output folder)
  # we need to perform these steps by calling directly the python scripts
  - task: PythonScript@0
    condition: succeeded()
    displayName: Generate ESP32 Partition tables for 16MB flash
    inputs:
      scriptSource: 'filePath'
      scriptPath: '$(IDF_PATH)\components\partition_table\gen_esp32part.py'
      arguments: '--verify ${{ parameters.partitionsDirectory }}\partitions_nanoclr_16mb.csv ${{ parameters.repoDirectory }}\build\partitions_16mb.bin'
  - task: PythonScript@0
    condition: succeeded()
    displayName: Generate ESP32 Partition tables for 8MB flash
    inputs:
      scriptSource: 'filePath'
      scriptPath: '$(IDF_PATH)\components\partition_table\gen_esp32part.py'
      arguments: '--verify ${{ parameters.partitionsDirectory }}\partitions_nanoclr_8mb.csv ${{ parameters.repoDirectory }}\build\partitions_8mb.bin'

  - task: PythonScript@0
    condition: succeeded()
    displayName: Generate ESP32 Partition tables for 4MB flash
    inputs:
      scriptSource: 'filePath'
      scriptPath: '$(IDF_PATH)\components\partition_table\gen_esp32part.py'
      arguments: '--verify ${{ parameters.partitionsDirectory }}\partitions_nanoclr_4mb.csv ${{ parameters.repoDirectory }}\build\partitions_4mb.bin'
